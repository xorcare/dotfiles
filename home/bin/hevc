#!/bin/bash

set -e

help() {
    echo "Usage: hevc [options] <video_files>"
    echo
    echo "Convert video files to HEVC format."
    echo
    echo "Options:"
    echo "  --remove-original      Remove the original file after successful conversion."
    echo "  --overwrite-original    Overwrite the original file with the converted file."
    echo "  -h, --help             Display this help message."
    echo
    echo "Supported formats: mkv, mp4, webm"
}

get_bitrate() {
    local width=$1
    local height=$2
    local framerate=$3

    case "$width" in
        7680)  # 8K
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "240M"
            else
                echo "160M"
            fi
            ;;
        3840)  # 4K
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "68M"
            else
                echo "45M"
            fi
            ;;
        2560)  # 2K
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "24M"
            else
                echo "16M"
            fi
            ;;
        1920)  # 1080p
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "12M"
            else
                echo "8M"
            fi
            ;;
        1280)  # 720p
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "7.5M"
            else
                echo "5M"
            fi
            ;;
        854)   # 480p
            if [[ "$framerate" =~ ^(48|50|60)$ ]]; then
                echo "4M"
            else
                echo "2.5M"
            fi
            ;;
        *)     # default
            echo "9.4M"
            ;;
    esac
}

# Main script
main() {
    if ! command -v ffmpeg &> /dev/null; then
        echo "ffmpeg is required but it's not installed. Aborting."
        exit 1
    fi

    if ! command -v ffprobe &> /dev/null; then
        echo "ffprobe is required but it's not installed. Aborting."
        exit 1
    fi

    if ffmpeg -encoders 2>/dev/null | grep -q hevc_videotoolbox; then
        use_videotoolbox=true
    else
        use_videotoolbox=false
    fi

    remove_original=false
    overwrite_original=false
    ARGS=""

    while [ $# -gt 0 ]; do
        case "$1" in
        -h | --help)
            help
            exit 0
            ;;
        --remove-original)
            remove_original=true
            ;;
        --overwrite-original)
            overwrite_original=true
            ;;
        --* | -*)
            echo "Illegal option $1"
            echo "For help use flag -h or --help"
            exit 1
            ;;
        *)
            ARGS="$ARGS \"$1\""
            ;;
        esac
        shift
    done

    if $remove_original && $overwrite_original; then
        echo "Error: You cannot use --remove-original and --overwrite-original at the same time." >&2
        exit 1
    fi

    readonly remove_original ARGS overwrite_original

    eval set -- "$ARGS"

    for file in "$@"; do
        if [[ ! "$file" =~ \.(mkv|mp4|webm)$ ]]; then
            echo "Unsupported file format: $file" >&2
            continue
        fi

        if [[ "$file" == *".hevc."* ]]; then
            echo "File $file already has .hevc. suffix. Skipping." >&2
            continue
        fi

        base_name="${file%.*}"
        hevc_file="${base_name}.hevc.${file##*.}"

        if [[ -f "$hevc_file" && "$overwrite_original" != true ]]; then
            echo "File $hevc_file already exists. Skipping." >&2
            continue
        fi

        resolution=$(ffprobe -v error -select_streams v:0 -show_entries stream=width,height,avg_frame_rate -of csv=s=x:p=0 "$file")
        width=$(echo $resolution | cut -d'x' -f1)
        height=$(echo $resolution | cut -d'x' -f2)

        framerate=$(ffprobe -v error -select_streams v:0 -show_entries stream=avg_frame_rate -of csv=p=0 "$file")

        bitrate=$(get_bitrate $width $height $framerate)

        codec=$(ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$file")

        if [[ "$codec" == "hevc" ]]; then
            echo "File $file is already in HEVC codec. Skipping." >&2
            continue
        fi

        progress_file="${base_name}.progress.hevc.${file##*.}"
        rm -f "$progress_file"

        if $use_videotoolbox; then
            ffmpeg -y -i "$file" -c:v hevc_videotoolbox -b:v $bitrate -maxrate:v $bitrate -c:a copy "$progress_file"
        else
            ffmpeg -y -i "$file" -c:v libx265 -b:v $bitrate -maxrate:v $bitrate -c:a copy "$progress_file"
        fi

        if [[ $? -eq 0 ]]; then
            mv "$progress_file" "$hevc_file"

            if $overwrite_original; then
                mv "$hevc_file" "$file"
                echo "Original file $file has been overwritten with the converted file."
                hevc_file="$file"

                continue

             else
                echo "File $file successfully converted to $hevc_file."

                if $remove_original; then
                    rm -f "$file"
                    echo "Original file $file has been removed."
                fi
             fi

         else
             echo "Error occurred while converting $file." >&2
             rm -f "$progress_file"
         fi
     done
}

main "$@"
